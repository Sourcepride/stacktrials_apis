"""update course model

Revision ID: 028f05ed952f
Revises: 2724092e2bf1
Create Date: 2025-08-25 09:07:39.320700

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "028f05ed952f"
down_revision: Union[str, Sequence[str], None] = "2724092e2bf1"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        op.f("chat_member_last_read_message_id_fkey"), "chat_member", type_="foreignkey"
    )
    op.drop_constraint("section_course_id_fkey", "section", type_="foreignkey")
    op.drop_constraint("comment_course_id_fkey", "comment", type_="foreignkey")
    op.drop_constraint("rating_course_id_fkey", "rating", type_="foreignkey")
    op.drop_constraint("chat_course_id_fkey", "chat", type_="foreignkey")
    op.drop_constraint(
        "course_enrollment_course_id_fkey", "course_enrollment", type_="foreignkey"
    )
    op.drop_constraint(
        "course_progress_course_id_fkey", "course_progress", type_="foreignkey"
    )

    # Change parent PK type
    op.alter_column(
        "course",
        "id",
        existing_type=sa.UUID(),
        type_=sqlmodel.sql.sqltypes.AutoString(),
        existing_nullable=False,
    )

    # Change all child FK columns
    op.alter_column(
        "section",
        "course_id",
        existing_type=sa.UUID(),
        type_=sqlmodel.sql.sqltypes.AutoString(),
        existing_nullable=True,
    )
    op.alter_column(
        "comment",
        "course_id",
        existing_type=sa.UUID(),
        type_=sqlmodel.sql.sqltypes.AutoString(),
        existing_nullable=True,
    )
    op.alter_column(
        "rating",
        "course_id",
        existing_type=sa.UUID(),
        type_=sqlmodel.sql.sqltypes.AutoString(),
        existing_nullable=True,
    )
    op.alter_column(
        "chat",
        "course_id",
        existing_type=sa.UUID(),
        type_=sqlmodel.sql.sqltypes.AutoString(),
        existing_nullable=True,
    )
    op.alter_column(
        "course_enrollment",
        "course_id",
        existing_type=sa.UUID(),
        type_=sqlmodel.sql.sqltypes.AutoString(),
        existing_nullable=True,
    )
    op.alter_column(
        "course_progress",
        "course_id",
        existing_type=sa.UUID(),
        type_=sqlmodel.sql.sqltypes.AutoString(),
        existing_nullable=True,
    )

    # Recreate constraints with correct type
    op.create_foreign_key(
        "section_course_id_fkey",
        "section",
        "course",
        ["course_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "comment_course_id_fkey",
        "comment",
        "course",
        ["course_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "rating_course_id_fkey",
        "rating",
        "course",
        ["course_id"],
        ["id"],
        ondelete="SET NULL",
    )
    op.create_foreign_key(
        "chat_course_id_fkey",
        "chat",
        "course",
        ["course_id"],
        ["id"],
        ondelete="SET NULL",
    )
    op.create_foreign_key(
        "course_enrollment_course_id_fkey",
        "course_enrollment",
        "course",
        ["course_id"],
        ["id"],
        ondelete="SET NULL",
    )
    op.create_foreign_key(
        "course_progress_course_id_fkey",
        "course_progress",
        "course",
        ["course_id"],
        ["id"],
        ondelete="SET NULL",
    )

    # Add new columns on course
    op.add_column(
        "course", sa.Column("image", sqlmodel.sql.sqltypes.AutoString(), nullable=True)
    )
    op.add_column("course", sa.Column("enrollment_count", sa.Integer(), nullable=False))
    op.add_column("course", sa.Column("comment_count", sa.Integer(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("section_course_id_fkey", "section", type_="foreignkey")
    op.drop_constraint("comment_course_id_fkey", "comment", type_="foreignkey")
    op.drop_constraint("rating_course_id_fkey", "rating", type_="foreignkey")
    op.drop_constraint("chat_course_id_fkey", "chat", type_="foreignkey")
    op.drop_constraint(
        "course_enrollment_course_id_fkey", "course_enrollment", type_="foreignkey"
    )
    op.drop_constraint(
        "course_progress_course_id_fkey", "course_progress", type_="foreignkey"
    )

    # Drop added columns
    op.drop_column("course", "comment_count")
    op.drop_column("course", "enrollment_count")
    op.drop_column("course", "image")

    # Revert parent PK type
    op.alter_column(
        "course",
        "id",
        existing_type=sqlmodel.sql.sqltypes.AutoString(),
        type_=sa.UUID(),
        existing_nullable=False,
    )

    # Revert all child FK columns
    op.alter_column(
        "section",
        "course_id",
        existing_type=sqlmodel.sql.sqltypes.AutoString(),
        type_=sa.UUID(),
        existing_nullable=True,
    )
    op.alter_column(
        "comment",
        "course_id",
        existing_type=sqlmodel.sql.sqltypes.AutoString(),
        type_=sa.UUID(),
        existing_nullable=True,
    )
    op.alter_column(
        "rating",
        "course_id",
        existing_type=sqlmodel.sql.sqltypes.AutoString(),
        type_=sa.UUID(),
        existing_nullable=True,
    )
    op.alter_column(
        "chat",
        "course_id",
        existing_type=sqlmodel.sql.sqltypes.AutoString(),
        type_=sa.UUID(),
        existing_nullable=True,
    )
    op.alter_column(
        "course_enrollment",
        "course_id",
        existing_type=sqlmodel.sql.sqltypes.AutoString(),
        type_=sa.UUID(),
        existing_nullable=True,
    )
    op.alter_column(
        "course_progress",
        "course_id",
        existing_type=sqlmodel.sql.sqltypes.AutoString(),
        type_=sa.UUID(),
        existing_nullable=True,
    )

    # Recreate old constraints with UUID types
    op.create_foreign_key(
        "section_course_id_fkey",
        "section",
        "course",
        ["course_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "comment_course_id_fkey",
        "comment",
        "course",
        ["course_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "rating_course_id_fkey",
        "rating",
        "course",
        ["course_id"],
        ["id"],
        ondelete="SET NULL",
    )
    op.create_foreign_key(
        "chat_course_id_fkey",
        "chat",
        "course",
        ["course_id"],
        ["id"],
        ondelete="SET NULL",
    )
    op.create_foreign_key(
        "course_enrollment_course_id_fkey",
        "course_enrollment",
        "course",
        ["course_id"],
        ["id"],
        ondelete="SET NULL",
    )
    op.create_foreign_key(
        "course_progress_course_id_fkey",
        "course_progress",
        "course",
        ["course_id"],
        ["id"],
        ondelete="SET NULL",
    )
    op.create_foreign_key(
        op.f("chat_member_last_read_message_id_fkey"),
        "chat_member",
        "message",
        ["last_read_message_id"],
        ["id"],
    )
    # ### end Alembic commands ###
